<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ja.finalproject.user.mapper.UserSqlMapper">
    <!-- 회원 가입 -->
    <insert id="createUser">
        <selectKey resultType="int" keyProperty="id"  order="AFTER">
          SELECT MAX(fu.id) FROM fp_user fu
        </selectKey>
        INSERT INTO fp_user (id, user_id, password, nickname, email, gender, birth, phone)
        VALUES (#{id}, #{userId},SHA2(CONCAT(#{password},'qwer'),224),#{nickname},#{email},#{gender},#{birth},#{phone})
    </insert>
    
    <!-- 로그인 체크 -->
    <select id="findByUserIdAndPassword" parameterType="com.ja.finalproject.dto.UserDto" 
            resultType="com.ja.finalproject.dto.UserDto">
      SELECT  (A.id) AS id,
              (A.user_id) AS userId,
              (A.password) AS password,
              (A.nickname) AS nickname,
              (A.email) AS email,
              (A.gender) AS gender,
              (A.birth) AS birth,
              (A.phone) AS phone,
              (A.created_at) AS createdAt
      FROM    fp_user A
      INNER JOIN fp_mail_auth B ON A.id = B.user_id 
      WHERE   A.user_id = #{userId}
      AND     A.password = SHA2(CONCAT(#{password},'qwer'),224)
      AND 	  B.complete ='Y';
    </select>

    <!-- 중복 검사 -->
    <select id="countUserByUserId" resultType="int">
      SELECT  COUNT(*)
      FROM    fp_user A
      WHERE   A.user_id = #{userId}
    </select>
    
    <!-- 아이디로 정보 찾기 -->
    <select id="findById" resultType="com.ja.finalproject.dto.UserDto">
      SELECT  (A.id) AS id,
              (A.user_id) AS userId,
              (A.password) AS password,
              (A.nickname) AS nickname,
              (A.email) AS email,
              (A.gender) AS gender,
              (A.birth) AS birth,
              (A.phone) AS phone,
              (A.created_at) AS createdAt
      FROM    fp_user A
      WHERE   A.id = #{id}
    </select>

    <!-- 카테고리 리스트 -->
    <select id="findHobbyCategoryAll" resultType="com.ja.finalproject.dto.HobbyCategoryDto">
      SELECT  (A.id) AS id,
              (A.hobby_name) AS hobbyName,
              (A.created_at) AS createdAt
      FROM    fp_hobby_category A
      ORDER BY A.id ASC
    </select>

    <!-- 취미 insert -->
    <insert id="createUserHobby">
      INSERT INTO fp_user_hobby (user_id, hobby_id)
      VALUES (#{userId},#{hobbyId})
    </insert>

    <!-- 메일 인증 insert -->
    <insert id="createMailAuth">
      INSERT INTO fp_mail_auth (user_id, auth_key, complete)
      VALUES(#{user_id},#{auth_key},'N');
    </insert>

    <update id="updateMailAuthComplete">
      UPDATE fp_mail_auth SET complete = 'Y'
      WHERE auth_key = #{auth_key};
    </update>
    
</mapper>