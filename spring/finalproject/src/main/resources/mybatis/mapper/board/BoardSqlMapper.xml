<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace = "com.ja.finalproject.board.mapper.BoardSqlMapper">
    <!-- 게시글 등록 -->
    <insert id="createBoard">
        <selectKey resultType="int" keyProperty="id" order="AFTER">
            SELECT  MAX(fa.id)
            FROM    fp_article fa
        </selectKey>
        INSERT INTO fp_article (user_id, title, content) 
        VALUES(#{userId}, #{title}, #{content});
    </insert>

    <!-- 게시글 전체 목록 -->
    <select id="findAll" resultType="com.ja.finalproject.dto.articleDto">
        SELECT  (b.id) AS id,
                (b.user_id) AS userId,
                (b.title) AS title,
                (b.content) AS content,
                (b.read_count) AS readCount,
                DATE_FORMAT(b.created_at,'%Y-%m-%d') AS createdAt
        FROM    fp_article b
        <if test="searchType != null and searchWord != null">
            <choose>
            <when test="searchType == 'title'">
                WHERE b.title LIKE CONCAT('%',#{searchWord},'%') 
            </when>
            <when test="searchType == 'content'">
                WHERE b.content LIKE CONCAT('%',#{searchWord},'%')
            </when>
            <when test="searchType == 'nickname'">
                INNER JOIN fp_user fp ON fp.id = b.user_id
                WHERE fp.nickname LIKE CONCAT('%',#{searchWord},'%')
            </when>
            </choose>
        </if>
        ORDER BY b.id DESC
        LIMIT #{pageIndex}, 10
    </select>

    <select id="getTotalArticleCount" resultType="int">
        SELECT  COUNT(*) 
        FROM    fp_article b
        <if test="searchType != null and searchWord != null">
            <choose>
            <when test="searchType == 'title'">
                WHERE b.title LIKE CONCAT('%',#{searchWord},'%') 
            </when>
            <when test="searchType == 'content'">
                WHERE b.content LIKE CONCAT('%',#{searchWord},'%')
            </when>
             <when test="searchType == 'nickname'">
                INNER JOIN fp_user fp ON fp.id = b.user_id
                WHERE fp.nickname LIKE CONCAT('%',#{searchWord},'%')
            </when>
            </choose>
        </if>
        ORDER BY b.id DESC
    </select>
   
   <!-- 게시글 상세보기 -->
    <select id="selectFindByNoContent" parameterType="int" resultType="com.ja.finalproject.dto.articleDto">
        SELECT  (b.id) AS id,
                (b.user_id) AS userId,
                (b.title) AS title,
                (b.content) AS content,
                (b.read_count) AS readCount,
                DATE_FORMAT(b.created_at,'%Y-%m-%d') AS createdAt
        FROM    fp_article b
        WHERE   b.id = #{id}
    </select>

    <!-- 조회수 증가 -->
    <update id="increaseReadCount">
        UPDATE fp_article SET read_count = read_count +1 WHERE id = #{id}
    </update>

    <!-- 게시글 수정 -->
    <update id="update">
        UPDATE fp_article SET title = #{title}, content = #{content} WHERE id = #{id}
    </update>

    <!-- 게시글 삭제 -->
    <delete id="deleteById">
        DELETE FROM fp_article WHERE id = #{id}
    </delete>

    <insert id="createArticleImage">
        INSERT INTO fp_article_image (article_id, location, original_filename)
        VALUES(#{articleId},#{location},#{originalFilename});
    </insert>
    <select id="findImageByArticleId" resultType="com.ja.finalproject.dto.ArticleImageDto">
        SELECT  (A.id) AS id,
                (A.article_id) AS articleId,
                (A.location) AS location,
                (A.original_filename) AS originalFilename,
                (A.created_At) AS createdAt
        FROM    fp_article_image A
        WHERE   A.article_id = #{articleId}
    </select>

    <!-- 좋아요 생성 -->
    <insert id="createLike">
      INSERT fp_post_likes(user_id, article_id, article_like)
      VALUES (#{user_id},#{article_id}, 1);
    </insert>
    <!-- 좋아요 삭제 -->
    <delete id="deleteLike">
      DELETE FROM fp_post_likes 
      WHERE user_id = #{user_id} AND article_id = #{article_id};
    </delete>
    <!-- 게시글 총 좋아요 개수 -->
    <select id="getTotalLikeCount" resultType="int">
      SELECT 	COUNT(*)
      FROM 	  fp_post_likes fpl 
      WHERE 	article_id = #{article_id}
    </select>
    <!-- 내가 좋아요 눌렀는지 확인 카운트 -->
    <select id="getMyLikeCount" resultType="int">
      SELECT 	COUNT(*)
      FROM 	  fp_post_likes fpl 
      WHERE 	article_id = #{article_id}
      AND 	  user_id = #{user_id}
    </select>

    <!-- 댓글 생성 -->
    <insert id="createComment">
        INSERT INTO fp_comment (article_id, user_id, content)
        VALUES (#{article_id}, #{user_id}, #{content} );
    </insert>
    <!-- 댓글 삭제 -->
    <delete id="deleteCommentById">
        DELETE FROM fp_comment 
        WHERE id = #{id};
    </delete>
    <!-- 댓글 업데이트 -->
    <update id="updateCommentById">
        UPDATE 	fp_comment 
        SET 	content = #{content} WHERE  id = #{id};
    </update>
    <!-- 게시글에 대한 댓글 개수 -->
    <select id="selectCommentByArticleId" resultType="com.ja.finalproject.dto.CommentDto">
        SELECT 	* 
        FROM 	fp_comment fc
        WHERE 	fc.article_id = #{article_id};
    </select>
</mapper>